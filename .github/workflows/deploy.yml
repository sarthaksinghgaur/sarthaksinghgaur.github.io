name: Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
  DEPLOY_USER: deployer
  DEPLOY_PATH: /var/www/sarthaksinghgaur.me/sarthaksinghgaur.github.io

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Bandit security scanner
        uses: PyCQA/bandit@master
        with:
          args: -r ./ -f json -o bandit-results.json
          
      - name: Run Safety checks
        run: |
          python -m pip install safety
          safety check

  test:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        run: |
          pytest --cov=./ --cov-report=xml
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
          
      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to server
        run: |
          # Create a temporary deployment script
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Ensure we're in the correct directory
          cd ${{ env.DEPLOY_PATH }}
          
          # Pull latest changes
          git pull origin main
          
          # Activate virtual environment
          source venv/bin/activate
          
          # Install/update dependencies
          pip install -r requirements.txt
          
          # Restart the service (using sudo with limited permissions)
          sudo systemctl restart resume-portfolio.service
          
          # Check service status
          sudo systemctl status resume-portfolio.service
          EOF
          
          # Make script executable
          chmod +x deploy.sh
          
          # Copy files to server with strict permissions
          rsync -avz --delete \
            --exclude '.git' \
            --exclude 'venv' \
            --exclude '__pycache__' \
            --exclude '*.pyc' \
            --exclude '.env' \
            --exclude '*.log' \
            --exclude '*.pem' \
            --exclude '*.key' \
            --chmod=755 \
            ./ ${{ env.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ env.DEPLOY_PATH }}/
            
          # Execute deployment script on server
          ssh -o StrictHostKeyChecking=no ${{ env.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "cd ${{ env.DEPLOY_PATH }} && ./deploy.sh"
